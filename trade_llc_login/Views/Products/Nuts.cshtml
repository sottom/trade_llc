@model trade_llc_login.Models.Products
@{
    ViewBag.Title = "Nuts";
    int commCounter = 1;
    int repCounter = 1;
}
<style>
    .hidden {
        display: none;
    }

    .comment {
        background-color: lightgray;
        border: solid gray 2px;
        padding: 20px;
    }

    .reply {
        margin-left: 40px;
    }
</style>

<div class="jumbotron text-center header_main row">
    <div class="col-md-12">
        <h8>Nuts</h8>
    </div>
</div>

<!-- these two divs look out of place, but they are necessary to make the header full screen -->
</div>
<div class="container body-content">
    <!-- /////////////////////////////////////////////////////////////////////////////////////// -->

    <div class="jumbotron row">
        <div class="col-md-6">
            <h1>@Model.ProductName</h1>
            <ul>
                <li>Location: @Model.ProductPickupLocation</li>
                <li>Amount of Product for Sell: @Model.ProductAmount</li>
                <li>Price: @Model.SellingPrice</li>
            </ul>
        </div>
        <img class="col-md-6" style="display:block;margin:0 auto;" src=@Model.ProductImg />
        <br />
    </div>

    @*TODO - switch how the models are being grabbed in ProductsController (it's printing multiple cashews because it is based off of comments, not products)*@
    @*- add ability to reply
        - add ability to edit comments or replies*@
    <div>
        <h1>Comment/Questions</h1>
        <div class="form-group">

            <div id="allComments">
                @try
                {
                    <div class="comment">
                        @foreach (var comment in Model.Comments) //second loop to go through the comments.
                        {
                            @*user comment*@
                            <h3 id="comment_@commCounter"><strong>@comment.Users.UserFirstName @comment.Users.UserLastName:</strong> <span id="commentBox_@commCounter">@comment.Comment</span></h3>
                            using (Html.BeginForm("EditComment", "Products", new { commentId = comment.CommentID, productType = "Nuts" }, FormMethod.Post, new { enctype = "multipart/form-data", @class = "hidden", @id = ("editComment_" + commCounter) }))
                            {
                                @Html.AntiForgeryToken()
                                @Html.TextArea("editComment")
                                <input type="submit" class="btn btn-primary" value="Submit" />
                            }
                            <label id="editCommentButton_@commCounter"><a onclick="editComment(@commCounter)">Edit</a></label>
                            commCounter++;

                            @*user replies*@
                        foreach (var rep in comment.reps)
                        {
                            <div class="reply">
                                <h5><strong>@rep.Users.UserFirstName @rep.Users.UserLastName:</strong> <span id="replyBox_@repCounter">@rep.Reply</span></h5>
                                @using (Html.BeginForm("EditReply", "Products", new { ReplyID = rep.ReplyID, productType = "Nuts" }, FormMethod.Post, new { enctype = "multipart/form-data", @class = "hidden", @id = ("editReply_" + repCounter) }))
                                {
                                    @Html.AntiForgeryToken()
                                    @Html.TextArea("editReply")
                                    <input type="submit" class="btn btn-primary" value="Submit" />
                                }
                                <label id="editReplyButton_@repCounter"><a onclick="editReply(@repCounter)">Edit</a></label>
                            </div>

                            repCounter++;
                        }

                        @*reply box*@
                        using (Html.BeginForm("Reply", "Products", new { email = ViewBag.Cookie, CommentID = comment.CommentID }, FormMethod.Post, new { enctype = "multipart/form-data" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.Label("Reply:")
                            @Html.TextBox("reply")
                            <input type="submit" class="btn btn-primary" value="Submit" />
                            }
                        }

                    @using (Html.BeginForm("Comment", "Products", new { email = ViewBag.Cookie, productId = Model.ProductID }, FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.Label("Comment:")
                        <br />
                        @Html.TextArea("comment", new { @cols="100", @rows="5" })
                        <br />
                        <input type="submit" class="btn btn-primary" value="Submit" />
                    }
                    </div>
                }
                catch
                {
                    <script>
                        alert("You need to login!")
                    </script>
                    //ScriptManager.RegisterStartupScript(Page, this.GetType(), "alert", "alert('You need to login!');", true);
                }
            </div>
        </div>
    </div>
